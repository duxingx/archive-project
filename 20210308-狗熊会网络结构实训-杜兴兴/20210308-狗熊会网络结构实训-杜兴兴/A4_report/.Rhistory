# par(mar=c(2,2,2,2))
plot(mc.max,subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图5  最大社区的社群发现", line = -22, outer = TRUE)
mc.max <- multilevel.community(subg.max,weights = E(subg.max)$V1)
sizes(mc.max)
# par(mar=c(2,2,2,2))
plot(mc.max,subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图5  最大社区的社群发现", line = -21, outer = TRUE)
par(mar=c(9,4,2,4))
hist(E(subg.min)$V1,breaks = 50,xlab = "权重",ylab = "频数",main="")
# title("图6  边权重分布直方图", line = -22, outer = TRUE)
mc.max <- multilevel.community(subg.max,weights = E(subg.max)$V1)
sizes(mc.max)
# par(mar=c(2,2,2,2))
plot(mc.max,subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
# title("图5  最大社区的社群发现", line = -21, outer = TRUE)
mc.max <- multilevel.community(subg.max,weights = E(subg.max)$V1)
sizes(mc.max)
# par(mar=c(2,2,2,2))
plot(mc.max,subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
# title("图5  最大社区的社群发现", line = -21, outer = TRUE)
set.seed(100)
g.sub_ordername = names(degree(subg.max)[order(degree(subg.max),decreasing = T)][1])
#设置节点属性
V(subg.max)$size = degree(subg.max)*0.2
V(subg.max)$color = 'gold'
V(subg.max)$shape = 'circle'
V(subg.max)$label.cex = 0.8
V(subg.max)$label.dist = 0.5
V(subg.max)$label.color = 'grey2'
V(subg.max)[g.sub_ordername]$color = "blue"
V(subg.max)[g.sub_ordername]$label.color = "green"
#设置连边属性
E(subg.max)$lty = 2
E(subg.max)$label.cex = 0.8
E(subg.max)$color = "grey"
E(subg.max)[E(subg.max)$V1 == max(E(subg.max)$V1)]$lty = 1
E(subg.max)[E(subg.max)$V1 == max(E(subg.max)$V1)]$color = "grey3"
E(subg.max)[order(E(subg.max)$V1,decreasing = T)[1:5]]$label =   E(subg.max)[order(E(subg.max)$V1,decreasing = T)[1:5]]$V1
E(subg.max)$label.color = 'red'
# 绘制网络图，图布局选取力导向布局
plot(subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05,sub="图4  最大社区的网络结构图")
mc.max <- multilevel.community(subg.max,weights = E(subg.max)$V1)
sizes(mc.max)
# par(mar=c(2,2,2,2))
plot(mc.max,subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
# title("图5  最大社区的社群发现", line = -21, outer = TRUE)
mc.max <- multilevel.community(subg.max,weights = E(subg.max)$V1)
sizes(mc.max)
# par(mar=c(2,2,2,2))
plot(mc.max,subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
# title("图5  最大社区的社群发现", line = -21, outer = TRUE)
mc.max <- multilevel.community(subg.max,weights = E(subg.max)$V1)
sizes(mc.max)
par(mar=c(2,2,2,2))
plot(mc.max,subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图5  最大社区的社群发现", line = -21, outer = TRUE)
mc.max <- multilevel.community(subg.max,weights = E(subg.max)$V1)
sizes(mc.max)
par(mar=c(2,2,2,2))
plot(mc.max,subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图5  最大社区的社群发现", line = -21, outer = TRUE)
set.seed(100)
mc.max <- multilevel.community(subg.max,weights = E(subg.max)$V1)
sizes(mc.max)
par(mar=c(2,2,2,2))
plot(mc.max,subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图5  最大社区的社群发现", line = -21, outer = TRUE)
set.seed(100)
mc.max <- multilevel.community(subg.max,weights = E(subg.max)$V1)
sizes(mc.max)
par(mar=c(2,2,2,2))
plot(mc.max,subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图5  最大社区的社群发现", line = -21, outer = TRUE)
set.seed(100)
g.sub_ordername = names(degree(subg.max)[order(degree(subg.max),decreasing = T)][1])
#设置节点属性
V(subg.max)$size = degree(subg.max)*0.2
V(subg.max)$color = 'gold'
V(subg.max)$shape = 'circle'
V(subg.max)$label.cex = 0.8
V(subg.max)$label.dist = 0.5
V(subg.max)$label.color = 'grey2'
V(subg.max)[g.sub_ordername]$color = "blue"
V(subg.max)[g.sub_ordername]$label.color = "green"
#设置连边属性
E(subg.max)$lty = 2
E(subg.max)$label.cex = 0.8
E(subg.max)$color = "grey"
E(subg.max)[E(subg.max)$V1 == max(E(subg.max)$V1)]$lty = 1
E(subg.max)[E(subg.max)$V1 == max(E(subg.max)$V1)]$color = "grey3"
E(subg.max)[order(E(subg.max)$V1,decreasing = T)[1:5]]$label =   E(subg.max)[order(E(subg.max)$V1,decreasing = T)[1:5]]$V1
E(subg.max)$label.color = 'red'
# 绘制网络图，图布局选取力导向布局
plot(subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05,sub="图4  最大社区的网络结构图")
# set.seed(100)
mc.max <- multilevel.community(subg.max,weights = E(subg.max)$V1)
sizes(mc.max)
par(mar=c(2,2,2,2))
plot(mc.max,subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图5  最大社区的社群发现", line = -21, outer = TRUE)
set.seed(100)
mc.max <- multilevel.community(subg.max,weights = E(subg.max)$V1)
sizes(mc.max)
par(mar=c(2,2,2,2))
plot(mc.max,subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图5  最大社区的社群发现", line = -21, outer = TRUE)
mc.max <- multilevel.community(subg.max,weights = E(subg.max)$V1)
sizes(mc.max)
# par(mar=c(2,2,2,2))
plot(mc.max,subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图5  最大社区的社群发现", line = -21, outer = TRUE)
set.seed(100)
g.sub_ordername = names(degree(subg.max)[order(degree(subg.max),decreasing = T)][1])
#设置节点属性
V(subg.max)$size = degree(subg.max)*0.2
V(subg.max)$color = 'gold'
V(subg.max)$shape = 'circle'
V(subg.max)$label.cex = 0.8
V(subg.max)$label.dist = 0.5
V(subg.max)$label.color = 'grey2'
V(subg.max)[g.sub_ordername]$color = "blue"
V(subg.max)[g.sub_ordername]$label.color = "green"
#设置连边属性
E(subg.max)$lty = 2
E(subg.max)$label.cex = 0.8
E(subg.max)$color = "grey"
E(subg.max)[E(subg.max)$V1 == max(E(subg.max)$V1)]$lty = 1
E(subg.max)[E(subg.max)$V1 == max(E(subg.max)$V1)]$color = "grey3"
E(subg.max)[order(E(subg.max)$V1,decreasing = T)[1:5]]$label =   E(subg.max)[order(E(subg.max)$V1,decreasing = T)[1:5]]$V1
E(subg.max)$label.color = 'red'
# 绘制网络图，图布局选取力导向布局
plot(subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图4  最大社区的网络结构图", line = -21, outer = TRUE)
set.seed(100)
plot(g,layout = layout.fruchterman.reingold,
vertex.size = degree(g)*0.1,
vertex.shape = 'circle',
vertex.color = 'gold',
vertex.label = "" ,
edge.label = "",
edge.width=0.1,
asp=-2,margin=-0.05)
title("图2  全节点的网络结构图", line = -22, outer = TRUE)
par(mar=c(9,4,2,4))
hist(E(subg.min)$V1,breaks = 50,xlab = "权重",ylab = "频数",main="")
title("图6  边权重分布直方图", line = -22, outer = TRUE)
set.seed(100)
#设置节点属性
V(subg.min)$size = degree(subg.min)*0.8
V(subg.min)$color = 'gold'
V(subg.min)$shape = 'circle'
V(subg.min)$label.cex = 0.8
V(subg.min)$label.dist = 0.5
V(subg.min)$label.color = 'grey2'
V(subg.min)[max(degree(subg.min))]$color = "blue"
V(subg.min)[max(degree(subg.min))]$label.color = "blue"
#设置连边属性
E(subg.min)$lty = 2
E(subg.min)$label.cex = 0.8
E(subg.min)$color = "grey"
E(subg.min)[E(subg.min)$V1 == max(E(subg.min)$V1)]$lty = 1
E(subg.min)[E(subg.min)$V1 == max(E(subg.min)$V1)]$color = "grey3"
E(subg.min)[order(E(subg.min)$V1,decreasing = T)[1:5]]$label = E(subg.min)[order(E(subg.min)$V1,decreasing = T)[1:5]]$V1
E(subg.min)$label.color = 'red'
# 绘制网络图，图布局选取力导向布局
plot(subg.min,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图7  最小社区的网络结构图", line = -22, outer = TRUE)
set.seed(100)
#设置节点属性
V(subg.min)$size = degree(subg.min)*0.8
V(subg.min)$color = 'gold'
V(subg.min)$shape = 'circle'
V(subg.min)$label.cex = 0.8
V(subg.min)$label.dist = 0.5
V(subg.min)$label.color = 'grey2'
V(subg.min)[max(degree(subg.min))]$color = "blue"
V(subg.min)[max(degree(subg.min))]$label.color = "blue"
#设置连边属性
E(subg.min)$lty = 2
E(subg.min)$label.cex = 0.8
E(subg.min)$color = "grey"
E(subg.min)[E(subg.min)$V1 == max(E(subg.min)$V1)]$lty = 1
E(subg.min)[E(subg.min)$V1 == max(E(subg.min)$V1)]$color = "grey3"
E(subg.min)[order(E(subg.min)$V1,decreasing = T)[1:5]]$label = E(subg.min)[order(E(subg.min)$V1,decreasing = T)[1:5]]$V1
E(subg.min)$label.color = 'red'
# 绘制网络图，图布局选取力导向布局
plot(subg.min,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图7  最小社区的网络结构图", line = -22, outer = TRUE)
mc.min <- multilevel.community(subg.min,weights = E(subg.min)$V1)
sizes(mc.min)
plot(mc.min,subg.min,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图8  最小社区的社群发现", line = -22, outer = TRUE)
mc <- multilevel.community(g,weights = E(g)$V1)
sizes(mc)
op = par(no.readonly = T)
par(mfrow=c(4,3))
for(node in groups(mc)){
nodes = as.vector(unlist(node))
g.sub = induced.subgraph(g,nodes)
g.sub_order = degree(g.sub)[order(degree(g.sub),decreasing = T)][1]
g.sub_ordername = names(g.sub_order)
V(g.sub)[g.sub_ordername]$label = g.sub_ordername
V(g.sub)[g.sub_ordername]$label.color = "red"
plot(g.sub,layout=layout.circle,
vertex.size = degree(g.sub)*0.5,
vertex.shape = 'circle',
vertex.color = 'skyblue3',
edge.width=0.3,
asp=-2,
margin=0,
sub = paste0("子网络密度：",round(graph.density(g.sub),4)))
}
par(op)
knitr::opts_chunk$set(echo = TRUE,
comment = "")
# 清除工作环境
rm(list = ls())
# 加载必要包
library(igraph)
library(plyr)
data = read.table("../A2_data/final/CollegeMsg.txt",col.names = c("SRC","DST","UNIXTS") )
data["SRC1"] = apply(data[,c(1,2)], 1, min)
data["DST1"] = apply(data[,c(1,2)], 1, max)
g.data = ddply(data,.(SRC1,DST1),nrow)
# 构建网络
g <- graph_from_data_frame(g.data,directed = F)
# 迭代删除节点度小于20的节点
print(paste("删除之前网络的节点数为：",length(V(g))))
while (any(degree(g) <10)) {
g = delete.vertices(g,V(g)[degree(g)<10])
}
print(paste("删除之后网络的节点数为：",length(V(g))))
# 计算节点数、边数
print(paste("网络的节点数为：",length(V(g))))
print(paste("网络的边数为：",length(E(g))))
# 计算度
degree.all = degree(g,mode = "all")
# 绘制直方图
par(mar=c(9,4,2,4))
hist(degree.all,xlab = "节点的度",ylab = "频数",main = "")
title("图1  节点度分布直方图", line = -22, outer = TRUE)
set.seed(100)
plot(g,layout = layout.reingold.tilford,
vertex.size = degree(g)*0.1,
vertex.shape = 'circle',
vertex.color = 'gold',
vertex.label = "" ,
edge.label = "",
edge.width=0.1,
asp=-2,margin=-0.05)
title("图2  全节点的网络结构图", line = -22, outer = TRUE)
set.seed(100)
plot(g,layout = layout.fruchterman.reingold,
vertex.size = degree(g)*0.1,
vertex.shape = 'circle',
vertex.color = 'gold',
vertex.label = "" ,
edge.label = "",
edge.width=0.1,
asp=-2,margin=-0.05)
title("图2  全节点的网络结构图", line = -22, outer = TRUE)
knitr::opts_chunk$set(echo = TRUE,
comment = "")
# 清除工作环境
rm(list = ls())
# 加载必要包
library(igraph)
library(plyr)
data = read.table("../A2_data/final/CollegeMsg.txt",col.names = c("SRC","DST","UNIXTS") )
data["SRC1"] = apply(data[,c(1,2)], 1, min)
data["DST1"] = apply(data[,c(1,2)], 1, max)
g.data = ddply(data,.(SRC1,DST1),nrow)
# 构建网络
g <- graph_from_data_frame(g.data,directed = F)
# 迭代删除节点度小于10的节点
print(paste("删除之前网络的节点数为：",length(V(g))))
while (any(degree(g) <10)) {
g = delete.vertices(g,V(g)[degree(g)<10])
}
# 计算节点数、边数
print(paste("删除之后网络的节点数为：",length(V(g))))
print(paste("删除之后网络的边数为：",length(E(g))))
print(paste("网络的密度为：",graph.density(g)))
# 计算度
degree.all = degree(g,mode = "all")
# 绘制直方图
par(mar=c(9,4,2,4))
hist(degree.all,xlab = "节点的度",ylab = "频数",main = "")
title("图1  节点度分布直方图", line = -22, outer = TRUE)
degree.center = sort(degree(g,mode = "all",normalized = T),decreasing = T)
round(degree.center,6)[1:10]
mc <- multilevel.community(g,weights = E(g)$V1)
sizes(mc)
op = par(no.readonly = T)
par(mfrow=c(4,3))
for(node in groups(mc)){
nodes = as.vector(unlist(node))
g.sub = induced.subgraph(g,nodes)
g.sub_order = degree(g.sub)[order(degree(g.sub),decreasing = T)][1]
g.sub_ordername = names(g.sub_order)
V(g.sub)[g.sub_ordername]$label = g.sub_ordername
V(g.sub)[g.sub_ordername]$label.color = "red"
plot(g.sub,layout=layout.fruchterman.reingoldircle,
vertex.size = degree(g.sub)*0.5,
vertex.shape = 'circle',
vertex.color = 'skyblue3',
edge.width=0.3,
asp=-2,
margin=0,
sub = paste0("子网络密度：",round(graph.density(g.sub),4)))
}
mc <- multilevel.community(g,weights = E(g)$V1)
sizes(mc)
op = par(no.readonly = T)
par(mfrow=c(4,3))
for(node in groups(mc)){
nodes = as.vector(unlist(node))
g.sub = induced.subgraph(g,nodes)
g.sub_order = degree(g.sub)[order(degree(g.sub),decreasing = T)][1]
g.sub_ordername = names(g.sub_order)
V(g.sub)[g.sub_ordername]$label = g.sub_ordername
V(g.sub)[g.sub_ordername]$label.color = "red"
plot(g.sub,layout=layout.fruchterman.reingold,
vertex.size = degree(g.sub)*0.5,
vertex.shape = 'circle',
vertex.color = 'skyblue3',
edge.width=0.3,
asp=-2,
margin=0,
sub = paste0("子网络密度：",round(graph.density(g.sub),4)))
}
par(op)
knitr::opts_chunk$set(echo = TRUE,
comment = "")
# 清除工作环境
rm(list = ls())
# 加载必要包
library(igraph)
library(plyr)
data = read.table("../A2_data/final/CollegeMsg.txt",col.names = c("SRC","DST","UNIXTS") )
data["SRC1"] = apply(data[,c(1,2)], 1, min)
data["DST1"] = apply(data[,c(1,2)], 1, max)
g.data = ddply(data,.(SRC1,DST1),nrow)
# 构建网络
g <- graph_from_data_frame(g.data,directed = F)
# 迭代删除节点度小于10的节点
print(paste("删除之前网络的节点数为：",length(V(g))))
while (any(degree(g) <10)) {
g = delete.vertices(g,V(g)[degree(g)<10])
}
# 计算节点数、边数
print(paste("删除之后网络的节点数为：",length(V(g))))
print(paste("删除之后网络的边数为：",length(E(g))))
print(paste("网络的密度为：",graph.density(g)))
# 计算度
degree.all = degree(g,mode = "all")
# 绘制直方图
par(mar=c(9,4,2,4))
hist(degree.all,xlab = "节点的度",ylab = "频数",main = "")
title("图1  节点度分布直方图", line = -22, outer = TRUE)
knitr::opts_chunk$set(echo = TRUE,
comment = "")
# 清除工作环境
rm(list = ls())
# 加载必要包
library(igraph)
library(plyr)
data = read.table("../A2_data/final/CollegeMsg.txt",col.names = c("SRC","DST","UNIXTS") )
data["SRC1"] = apply(data[,c(1,2)], 1, min)
data["DST1"] = apply(data[,c(1,2)], 1, max)
g.data = ddply(data,.(SRC1,DST1),nrow)
# 构建网络
g <- graph_from_data_frame(g.data,directed = F)
# 迭代删除节点度小于10的节点
print(paste("删除之前网络的节点数为：",length(V(g))))
while (any(degree(g) <10)) {
g = delete.vertices(g,V(g)[degree(g)<10])
}
# 计算节点数、边数
print(paste("删除之后网络的节点数为：",length(V(g))))
print(paste("删除之后网络的边数为：",length(E(g))))
print(paste("网络的密度为：",graph.density(g)))
# 计算度
degree.all = degree(g,mode = "all")
# 绘制直方图
par(mar=c(9,4,2,4))
hist(degree.all,xlab = "节点的度",ylab = "频数",main = "")
title("图1  节点度分布直方图", line = -22, outer = TRUE)
degree.center = sort(degree(g,mode = "all",normalized = T),decreasing = T)
round(degree.center,6)[1:10]
closeness.center = sort(closeness(g,mode = "all",normalized = T),decreasing = T)
round(closeness.center,6)[1:10]
set.seed(100)
plot(g,layout = layout.fruchterman.reingold,
vertex.size = degree(g)*0.1,
vertex.shape = 'circle',
vertex.color = 'gold',
vertex.label = "" ,
edge.label = "",
edge.width=0.1,
asp=-2,margin=-0.05)
title("图2  全节点的网络结构图", line = -22, outer = TRUE)
mc <- multilevel.community(g,weights = E(g)$V1)
sizes(mc)
op = par(no.readonly = T)
par(mfrow=c(4,3))
for(node in groups(mc)){
nodes = as.vector(unlist(node))
g.sub = induced.subgraph(g,nodes)
g.sub_order = degree(g.sub)[order(degree(g.sub),decreasing = T)][1]
g.sub_ordername = names(g.sub_order)
V(g.sub)[g.sub_ordername]$label = g.sub_ordername
V(g.sub)[g.sub_ordername]$label.color = "red"
plot(g.sub,layout=layout.fruchterman.reingold,
vertex.size = degree(g.sub)*0.5,
vertex.shape = 'circle',
vertex.color = 'skyblue3',
edge.width=0.3,
asp=-2,
margin=0,
sub = paste0("子网络密度：",round(graph.density(g.sub),4)))
}
par(op)
max_index = which.max(lengths(groups(mc)))
subg.maxnodes = groups(mc)[max_index]
subg.maxnode = as.vector(unlist(subg.maxnodes))
subg.max = induced.subgraph(g,subg.maxnode)
par(mar=c(9,4,2,4))
hist(E(subg.max)$V1,breaks = 50,xlab = "权重",ylab = "频数",main="")
title("图3  边权重分布直方图", line = -22, outer = TRUE)
set.seed(100)
g.sub_ordername = names(degree(subg.max)[order(degree(subg.max),decreasing = T)][1])
#设置节点属性
V(subg.max)$size = degree(subg.max)*0.2
V(subg.max)$color = 'gold'
V(subg.max)$shape = 'circle'
V(subg.max)$label.cex = 0.8
V(subg.max)$label.dist = 0.5
V(subg.max)$label.color = 'grey2'
V(subg.max)[g.sub_ordername]$color = "blue"
V(subg.max)[g.sub_ordername]$label.color = "green"
#设置连边属性
E(subg.max)$lty = 2
E(subg.max)$label.cex = 0.8
E(subg.max)$color = "grey"
E(subg.max)[E(subg.max)$V1 == max(E(subg.max)$V1)]$lty = 1
E(subg.max)[E(subg.max)$V1 == max(E(subg.max)$V1)]$color = "grey3"
E(subg.max)[order(E(subg.max)$V1,decreasing = T)[1:5]]$label =   E(subg.max)[order(E(subg.max)$V1,decreasing = T)[1:5]]$V1
E(subg.max)$label.color = 'red'
# 绘制网络图，图布局选取力导向布局
plot(subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图4  最大社区的网络结构图", line = -21, outer = TRUE)
mc.max <- multilevel.community(subg.max,weights = E(subg.max)$V1)
sizes(mc.max)
plot(mc.max,subg.max,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图5  最大社区的社群发现", line = -21, outer = TRUE)
min_index = which.min(lengths(groups(mc)))
subg.minnodes = groups(mc)[min_index]
subg.minnode = as.vector(unlist(subg.minnodes))
subg.min = induced.subgraph(g,subg.minnode)
par(mar=c(9,4,2,4))
hist(E(subg.min)$V1,breaks = 50,xlab = "权重",ylab = "频数",main="")
title("图6  边权重分布直方图", line = -22, outer = TRUE)
set.seed(100)
#设置节点属性
V(subg.min)$size = degree(subg.min)*0.8
V(subg.min)$color = 'gold'
V(subg.min)$shape = 'circle'
V(subg.min)$label.cex = 0.8
V(subg.min)$label.dist = 0.5
V(subg.min)$label.color = 'grey2'
V(subg.min)[max(degree(subg.min))]$color = "blue"
V(subg.min)[max(degree(subg.min))]$label.color = "blue"
#设置连边属性
E(subg.min)$lty = 2
E(subg.min)$label.cex = 0.8
E(subg.min)$color = "grey"
E(subg.min)[E(subg.min)$V1 == max(E(subg.min)$V1)]$lty = 1
E(subg.min)[E(subg.min)$V1 == max(E(subg.min)$V1)]$color = "grey3"
E(subg.min)[order(E(subg.min)$V1,decreasing = T)[1:5]]$label = E(subg.min)[order(E(subg.min)$V1,decreasing = T)[1:5]]$V1
E(subg.min)$label.color = 'red'
# 绘制网络图，图布局选取力导向布局
plot(subg.min,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图7  最小社区的网络结构图", line = -22, outer = TRUE)
mc.min <- multilevel.community(subg.min,weights = E(subg.min)$V1)
sizes(mc.min)
plot(mc.min,subg.min,layout=layout.fruchterman.reingold,
edge.width=0.3,asp=-2,margin=-0.05)
title("图8  最小社区的社群发现", line = -22, outer = TRUE)
